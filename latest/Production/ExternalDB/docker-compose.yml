networks:
  front:
    driver: overlay
  messaging:
    driver: overlay
secrets:
  ADMIN_PASSWORD:
    external: true
  ENGINE_SECRET:
    external: true
  USER_PASSWORD:
    external: true
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    external: true
services:
  applicationcollections:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=applicationCollections;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: applicationCollections
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/applicationcollections:1.1.2
    networks:
    - front
    - messaging
    restart: always
  applicationruns:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=applicationRuns;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: applicationRuns
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/applicationruns:1.1.0
    networks:
    - front
    - messaging
    restart: always
  applications:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=applications;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: applications
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/applications:1.1.0
    networks:
    - front
    - messaging
    restart: always
  comparisonengine:
    depends_on:
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 1
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub
      Services__applicationCollectionsUrl: http://applicationcollections/applicationCollections
      Services__applicationRunsUrl: http://applicationruns/applicationRuns
      Services__applicationsUrl: http://applications/applications
      Services__imageStorageUrl: http://imagestorage/imageStorage
      Services__licensingUrl: http://licensing/licensing
      Services__runAssignmentsUrl: http://runassignments/runAssignments
      Services__runHistoryUrl: http://runhistory/runHistory
    healthcheck:
      interval: 1m
      retries: 1
      test: test $$(ps -o etimes= -p $$(pgrep dotnet)) -gt 30 && exit 0 ||  exit 1
      timeout: 2s
    image: loginvsi2/comparisonengine:1.1.2
    networks:
    - front
    - messaging
    restart: always
  contentdelivery:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: contentDelivery
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/content/zip/LoginATClient.zip || exit 1
      timeout: 2s
    image: loginvsi2/contentdelivery:1.1.0
    networks:
    - front
    - messaging
    restart: always
    secrets:
    - ENGINE_SECRET
  gateway:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      START_DELAY: 20
    healthcheck:
      interval: 1m
      retries: 5
      start_period: 5m
      test: wget --no-check-certificate -q http://localhost || exit 1
      timeout: 2s
    image: loginvsi2/gateway:1.1.0
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    - 80:80
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Appliance_Version: 'a009'
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityserver
      Version__Number: '1.1.24'
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 1m
      test: curl -f http://localhost/identityserver/images/background.png || exit
        1
      timeout: 2s
    image: loginvsi2/identityserver:1.1.0
    networks:
    - front
    restart: always
    secrets:
    - ADMIN_PASSWORD
    - USER_PASSWORD
    - ENGINE_SECRET
  imagestorage:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=imageStorage;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: imageStorage
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/imagestorage:1.1.0
    networks:
    - front
    - messaging
    restart: always
  licensing:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=licensing;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: licensing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/licensing:1.1.0
    networks:
    - front
    - messaging
    restart: always
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.6.12-management
    networks:
    - messaging
    restart: always
    volumes:
    - ${DB_ROOT}/messagebroker:/var/lib/rabbitmq/mnesia
  notificationshub:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationsHub
      IdentityProvider__Authority: http://identityserver/identityServer
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -sf http://localhost || test $$? -eq 22 && exit 0 || exit 1
      timeout: 2s
    image: loginvsi2/notificationshub:1.1.0
    networks:
    - front
    restart: always
  notificationsworker:
    depends_on:
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 1
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub
      Services__applicationCollectionsUrl: http://applicationcollections/applicationCollections
      Services__applicationRunsUrl: http://applicationruns/applicationRuns
      Services__applicationsUrl: http://applications/applications
      Services__imageStorageUrl: http://imagestorage/imageStorage
      Services__licensingUrl: http://licensing/licensing
      Services__runAssignmentsUrl: http://runassignments/runAssignments
      Services__runHistoryUrl: http://runhistory/runHistory
    healthcheck:
      interval: 1m
      retries: 1
      test: test $$(ps -o etimes= -p $$(pgrep dotnet)) -gt 30 && exit 0 ||  exit 1
      timeout: 2s
    image: loginvsi2/notificationsworker:1.1.0
    networks:
    - front
    - messaging
    restart: always
  propagationengine:
    depends_on:
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 2
      Hosting__VirtualDirectory: propagationEngine
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__ApplicationRunsUrl: http://applicationruns
      Services__HubUrl: ws://notificationshub/notificationsHub
      Services__ImageStorageUrl: http://imagestorage
      Services__LicensingUrl: http://licensing
    healthcheck:
      interval: 1m
      retries: 1
      test: test $$(ps -o etimes= -p $$(pgrep dotnet)) -gt 30 && exit 0 ||  exit 1
      timeout: 2s
    image: loginvsi2/comparisonengine:1.1.2
    networks:
    - front
    - messaging
    restart: always
  runassignments:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=runAssignments;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: runAssignments
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/runassignments:1.1.0
    networks:
    - front
    - messaging
    restart: always
  runhistory:
    depends_on:
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: ${CONNECTION_STRING};Database=runHistory;
      DB__DbType: ${DB_TYPE}
      Hosting__VirtualDirectory: runHistory
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Retry__ConnectDelay: 10
      Retry__MaxAttempts: 50
      Retry__RetryDelay: 10
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 5m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/runhistory:1.1.0
    networks:
    - front
    - messaging
    restart: always
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverUrls
    healthcheck:
      interval: 1m
      retries: 3
      start_period: 1m
      test: curl -f http://localhost/swagger/v1/swagger.json || exit 1
      timeout: 2s
    image: loginvsi2/serverurls:1.1.0
    networks:
    - front
    restart: always
  synchronizationworker:
    depends_on:
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 1
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub
      Services__applicationCollectionsUrl: http://applicationcollections/applicationCollections
      Services__applicationRunsUrl: http://applicationruns/applicationRuns
      Services__applicationsUrl: http://applications/applications
      Services__imageStorageUrl: http://imagestorage/imageStorage
      Services__licensingUrl: http://licensing/licensing
      Services__runAssignmentsUrl: http://runassignments/runAssignments
      Services__runHistoryUrl: http://runhistory/runHistory
    healthcheck:
      interval: 1m
      retries: 1
      test: test $$(ps -o etimes= -p $$(pgrep dotnet)) -gt 30 && exit 0 ||  exit 1
      timeout: 2s
    image: loginvsi2/synchronizationworker:1.1.0
    networks:
    - front
    - messaging
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      interval: 1m
      retries: 3
      test: wget -q http://localhost || exit 1
      timeout: 2s
    image: loginvsi2/userinterface:1.1.1
    networks:
    - front
    restart: always
version: "3.4"

