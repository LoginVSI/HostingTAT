networks:
  databases:
    driver: bridge
  front:
    driver: bridge
  messaging:
    driver: bridge
secrets:
  ADMIN_PASSWORD:
    file: ${SSL_CERTIFICATE_KEY_PASSWORD_PATH}
  USER_PASSWORD:
    file: ${SSL_CERTIFICATE_KEY_PASSWORD_PATH}
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    file: ${SSL_CERTIFICATE_KEY_PASSWORD_PATH}
services:
  applicationCollectionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - applicationCollectionsDb:var/lib/postgresql/data
  applicationRunsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - applicationRunsDb:/var/lib/postgresql/data
  applicationcollections:
    depends_on:
    - applicationCollectionsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationCollectionsDb;Database=ApplicationCollections;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applicationcollections
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.9.15'
    image: loginvsi2/applicationcollections:0.5.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  applicationruns:
    depends_on:
    - applicationRunsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationRunsDb;Database=ApplicationRuns;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applicationruns
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.9.15'
    image: loginvsi2/applicationruns:0.5.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  applications:
    depends_on:
    - applicationsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationsDb;Database=Applications;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applications
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.9.15'
    image: loginvsi2/applications:0.5.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  applicationsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - applicationsDb:var/lib/postgresql/data
  comparisonengine:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__ApplicationRunsUrl: http://applicationruns
      Services__ImageStorageUrl: http://imagestorage
    image: loginvsi2/comparisonengine:0.4.1
    networks:
    - front
    - messaging
    restart: always
  contentdelivery:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi2/contentdelivery:0.5.0
    networks:
    - front
    restart: always
  gateway:
    depends_on:
    - applications
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      START_DELAY: 10
    image: loginvsi2/gateway:0.1.2
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityserver
      Version__Number: '0.9.15'
    image: loginvsi2/identityserver:0.1.2
    networks:
    - front
    restart: always
    secrets:
    - ADMIN_PASSWORD
    - USER_PASSWORD
  imageStorageDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - imageStorageDb:/var/lib/postgresql/data
  imagestorage:
    depends_on:
    - imageStorageDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CORS__AlternativeHostUrl: https://localhost.loginvsi.com:4200
      DB__ConnectionString: Server=imageStorageDb;Database=ImageStorage;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: imagestorage
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.9.15'
    image: loginvsi2/imagestorage:0.2.5
    networks:
    - databases
    - front
    - messaging
    restart: always
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.7.4-management
    networks:
    - messaging
    ports:
    - 5672:5672
    - 15672:15672
    restart: always
    volumes:
    - ${DB_ROOT}/messagebroker:/var/lib/rabbitmq/mnesia
  notificationshub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationshub
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi2/notificationshub:0.1.0
    networks:
    - front
    restart: always
  notificationsworker:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub
    image: loginvsi2/notificationsworker:0.1.0
    networks:
    - front
    - messaging
    restart: always
  portainer:
    command: -d /data -H unix:///var/run/docker.sock --admin-password '$$2y$$05$$DTUYaqFuY0ot0BuUqKE4d.KyQmBzZiUe64rl6QLTYhS/9Nl000vK.'
    deploy:
      restart_policy:
        condition: on-failure
    image: portainer/portainer
    ports:
    - 9000:9000
    restart: always
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  runHistoryDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - runHistoryDb:/var/lib/postgresql/data
  runhistory:
    depends_on:
    - runHistoryDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=runHistoryDb;Database=RunHistory;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: runhistory
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.9.15'
    image: loginvsi2/runhistory:0.5.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverurls
    image: loginvsi2/serverurls:0.1.0
    networks:
    - front
    restart: always
  synchronizationworker:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__ApplicationCollectionsUrl: http://applicationcollections
      Services__ApplicationRunsUrl: http://applicationruns
      Services__ApplicationsUrl: http://applications
      Services__ReferenceImagesUrl: http://referenceimages
      Services__RunHistoryUrl: http://runhistory
    image: loginvsi2/synchronizationworker:0.2.0
    networks:
    - front
    - messaging
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi2/userinterface:0.5.1
    networks:
    - front
    restart: always
version: "3.1"
volumes:
  applicationCollectionsDb:
  applicationRunsDb:
  applicationsDb:
  imageStorageDb:
  runHistoryDb:

