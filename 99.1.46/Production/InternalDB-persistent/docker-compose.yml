networks:
  databases:
    driver: overlay
  front:
    driver: overlay
  messaging:
    driver: overlay
secrets:
  ADMIN_PASSWORD:
    external: true
  ENGINE_SECRET:
    external: true
  USER_PASSWORD:
    external: true
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    external: true
services:
  applicationCollectionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/applicationCollectionsDb:/var/lib/postgresql/data
  applicationRunsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/applicationRunsDb:/var/lib/postgresql/data
  applicationcollections:
    depends_on:
    - applicationCollectionsDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationCollectionsDb;Database=ApplicationCollections;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applicationCollections
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/applicationcollections:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  applicationruns:
    depends_on:
    - applicationRunsDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationRunsDb;Database=ApplicationRuns;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applicationRuns
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/applicationruns:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  applications:
    depends_on:
    - applicationsDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=applicationsDb;Database=Applications;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: applications
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/applications:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  applicationsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/applicationsDb:/var/lib/postgresql/data
  comparisonengine:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 1
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__ApplicationRunsUrl: http://applicationruns
      Services__ImageStorageUrl: http://imagestorage
      Services__LicensingUrl: http://licensing
    image: loginvsi2/comparisonengine:dev
    networks:
    - front
    - messaging
    restart: always
  contentdelivery:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ClientSecrets__Launcher: 39Q3R54C4PI0Y17ZA45B55PCFPA9PMW4OKILLK1D
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
    image: loginvsi2/contentdelivery:dev
    networks:
    - front
    restart: always
    secrets:
    - ENGINE_SECRET
  gateway:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      START_DELAY: 10
    image: loginvsi2/gateway:dev
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    - 80:80
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityServer
      Version__Number: '99.1.46'
    image: loginvsi2/identityserver:dev
    networks:
    - front
    restart: always
    secrets:
    - ADMIN_PASSWORD
    - USER_PASSWORD
    - ENGINE_SECRET
  imageStorageDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/imageStorageDb:/var/lib/postgresql/data
  imagestorage:
    depends_on:
    - imageStorageDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=imageStorageDb;Database=ImageStorage;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: imageStorage
      IdentityProvider__Authority: http://identityserver/identityServer
      Version__Number: '99.1.46'
    image: loginvsi2/imagestorage:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  licensing:
    depends_on:
    - licensingDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=licensingDb;Database=Licensing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: licensing
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/licensing:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  licensingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/licensingDb:/var/lib/postgresql/data
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.7.4-management
    networks:
    - messaging
    restart: always
    volumes:
    - ${DB_ROOT}/messagebroker:/var/lib/rabbitmq/mnesia
  notificationshub:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationsHub
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi2/notificationshub:dev
    networks:
    - front
    restart: always
  notificationsworker:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub
    image: loginvsi2/notificationsworker:dev
    networks:
    - front
    - messaging
    restart: always
  propagationengine:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ComparisonEngine__MatchPercentageThreshold: 95
      ComparisonEngine__OperationMode: 2
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__ApplicationRunsUrl: http://applicationruns
      Services__ImageStorageUrl: http://imagestorage
      Services__LicensingUrl: http://licensing
    image: loginvsi2/comparisonengine:dev
    networks:
    - front
    - messaging
    restart: always
  runAssignmentsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/runAssignmentsDb:/var/lib/postgresql/data
  runHistoryDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/runHistoryDb:/var/lib/postgresql/data
  runassignments:
    depends_on:
    - runAssignmentsDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=runAssignmentsDb;Database=RunAssignments;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: runAssignments
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/runassignments:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  runhistory:
    depends_on:
    - runHistoryDb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=runHistoryDb;Database=RunHistory;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: runHistory
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.46'
    image: loginvsi2/runhistory:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverUrls
    image: loginvsi2/serverurls:dev
    networks:
    - front
    restart: always
  synchronizationworker:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__ApplicationCollectionsUrl: http://applicationcollections
      Services__ApplicationRunsUrl: http://applicationruns
      Services__ApplicationsUrl: http://applications
      Services__RunAssignmentsUrl: http://runassignments
      Services__RunHistoryUrl: http://runhistory
    image: loginvsi2/synchronizationworker:dev
    networks:
    - front
    - messaging
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi2/userinterface:dev
    networks:
    - front
    restart: always
version: "3.1"

