networks:
  databases:
    driver: bridge
  front:
    driver: bridge
  messaging:
    driver: bridge
secrets:
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    file: ${SSL_CERTIFICATE_KEY_PASSWORD_PATH}
services:
  accounts:
    depends_on:
    - accountsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=accountsDb;Database=Accounts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: accounts
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.16'
    image: loginvsi/accounts:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  accountsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/accountsDb:/var/lib/postgresql/data
  accountsworker:
    depends_on:
    - sessionrequestmanagement
    - accounts
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountsUrl: http://accounts
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement/sessionrequestmanagement
    image: loginvsi/accountsworker:dev
    networks:
    - front
    - messaging
    restart: always
  appMonitorSourcesDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorSourcesDb:/var/lib/postgresql/data
  appMonitoringScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitoringScheduleDb:/var/lib/postgresql/data
  appMonitorsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorsDb:/var/lib/postgresql/data
  appmonitoringschedule:
    depends_on:
    - appMonitoringScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitoringScheduleDb;Database=AppMonitoringSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitoringSchedule
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitoringschedule:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitors:
    depends_on:
    - appMonitorsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorsDb;Database=AppMonitors;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitors
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitors:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitorscheduler:
    depends_on:
    - sessionmanagement
    - appmonitoringschedule
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      Polling__Interval: 10
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__SessionManagementUrl: http://sessionmanagement/sessionManagement
    image: loginvsi/appmonitorscheduler:dev
    networks:
    - front
    restart: always
  appmonitorsources:
    depends_on:
    - appMonitorSourcesDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorSourcesDb;Database=AppMonitorSources;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitorSources
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitorsources:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  contentdelivery:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/contentdelivery:dev
    networks:
    - front
    restart: always
  enginehub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: engineHub
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/enginehub:dev
    networks:
    - front
    ports:
    - 4000:80
    restart: always
  enginehubworker:
    depends_on:
    - enginehub
    - sessionmanagement
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://enginehub/enginehub/websockets
      Services__SessionManagementUrl: http://sessionmanagement/sessionManagement
    image: loginvsi/enginehubworker:dev
    networks:
    - front
    - messaging
    restart: always
  environmentConfigurationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/environmentConfigurationDb:/var/lib/postgresql/data
  environmentconfiguration:
    depends_on:
    - environmentConfigurationDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=environmentConfigurationDb;Database=EnvironmentConfiguration;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: environmentConfiguration
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/environmentconfiguration:dev
    networks:
    - databases
    - front
    restart: always
  eventhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: eventHub
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/enginehub:dev
    networks:
    - front
    restart: always
  gateway:
    depends_on:
    - accounts
    - appmonitors
    - appmonitoringschedule
    - appmonitorsources
    - contentdelivery
    - enginehub
    - environmentconfiguration
    - eventhub
    - identityserver
    - infrastructures
    - launcherhub
    - launchers
    - logintimeactions
    - logintimeevents
    - measurementactions
    - measurementevents
    - messagebroker
    - serverurls
    - sessiondiscovery
    - sessionloginresults
    - sessionlogonscripts
    - sessionmanagement
    - sessionregulation
    - notificationshub
    - virtualuserresults
    - accountsworker
    - appmonitorscheduler
    - enginehubworker
    - launcherhubworker
    - launcherregistryworker
    - notificationsworker
    - publishingworker
    - sessiondiscoveryworker
    - sessionmanagementworker
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/gateway_product:dev
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityServer
    image: loginvsi/identityserver:dev
    networks:
    - front
    restart: always
  infrastructures:
    depends_on:
    - infrastructuresDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=infrastructuresDb;Database=Infrastructures;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: infrastructures
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/infrastructures:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  infrastructuresDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/infrastructuresDb:/var/lib/postgresql/data
  launcherhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: launcherHub
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launcherhub:dev
    networks:
    - front
    - messaging
    ports:
    - 4001:80
    restart: always
  launcherhubworker:
    depends_on:
    - launchers
    - sessionmanagement
    - sessionrequestmanagement
    - launcherhub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://launcherhub/launcherhub/websockets
      Services__LauncherRegistryUrl: http://launchers/launchers
      Services__SessionManagementUrl: http://sessionmanagement/sessionManagement
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement/sessionRequestManagement
    image: loginvsi/launcherhubworker:dev
    networks:
    - front
    - messaging
    restart: always
  launcherregistryworker:
    depends_on:
    - launchers
    - sessionmanagement
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
      Services__LaunchersUrl: http://launchers/launchers
      Services__SessionRequestManagementUrl: http://sessionRequestManagement/sessionRequestManagement
    image: loginvsi/launcherregistryworker:dev
    networks:
    - front
    - messaging
    restart: always
  launchers:
    depends_on:
    - launchersDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=Launchers;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: launchers
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launchers:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  launchersDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/launchersDb:/var/lib/postgresql/data
  loginScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/loginScheduleDb:/var/lib/postgresql/data
  loginmonitorscheduler:
    depends_on:
    - sessionrequestmanagement
    - loginschedule
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      Polling__Interval: 10
      Services__LoginScheduleUrl: http://loginschedule/loginschedule
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement/sessionRequestManagement
    image: loginvsi/loginmonitorscheduler:dev
    networks:
    - front
    restart: always
  loginschedule:
    depends_on:
    - loginScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=LoginSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginSchedule
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/loginschedule:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactions:
    depends_on:
    - logintimeactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeactionsDb;Database=LoginTimeActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginTimeActions
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeactions:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeactionsDb:/var/lib/postgresql/data
  logintimeevents:
    depends_on:
    - logintimeeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeeventsDb;Database=LoginTimeEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginTimeEvents
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeevents:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeeventsDb:/var/lib/postgresql/data
  measurementactions:
    depends_on:
    - measurementactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementactionsDb;Database=MeasurementActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementActions
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementactions:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementactionsDb:/var/lib/postgresql/data
  measurementactionsworker:
    depends_on:
    - sessionmanagement
    - virtualuserresults
    - measurementactions
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__MeasurementActionsUrl: http://measurementactions/measurementactions
      Services__MeasurementEventsUrl: http://measurementevents/measurementevents
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/measurementactionsworker:dev
    networks:
    - front
    - messaging
    restart: always
  measurementevents:
    depends_on:
    - measurementeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementeventsDb;Database=MeasurementEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementEvents
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementevents:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementeventsDb:/var/lib/postgresql/data
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.6.12-management
    networks:
    - messaging
    ports:
    - 5672:5672
    - 15672:15672
    restart: always
  notificationshub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationsHub
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/notificationshub:dev
    networks:
    - front
    restart: always
  notificationsworker:
    depends_on:
    - notificationshub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationsHub/websockets
    image: loginvsi/notificationsworker:dev
    networks:
    - front
    - messaging
    restart: always
  portainer:
    command: -d /data -H unix:///var/run/docker.sock --admin-password '$$2y$$05$$DTUYaqFuY0ot0BuUqKE4d.KyQmBzZiUe64rl6QLTYhS/9Nl000vK.'
    deploy:
      restart_policy:
        condition: on-failure
    image: portainer/portainer
    ports:
    - 9000:9000
    restart: always
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  publishingworker:
    depends_on:
    - appmonitors
    - appmonitorsources
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__AppMonitorSourcesUrl: http://appmonitorsources/appMonitorSources
      Services__AppMonitorsUrl: http://appmonitors/appMonitors
    image: loginvsi/publishingworker:dev
    networks:
    - front
    - messaging
    restart: always
  scriptseeder:
    depends_on:
    - appmonitors
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
      Services__IdPUrl: http://identityserver/identityserver
    image: loginvsi/scriptseeder:dev
    networks:
    - front
    restart: on-failure
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverUrls
    image: loginvsi/serverurls:dev
    networks:
    - front
    restart: always
  sessionDiscoveryDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionDiscoveryDb:/var/lib/postgresql/data
  sessionLoginResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLoginResultsDb:/var/lib/postgresql/data
  sessionLogonScriptsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLogonScriptsDb:/var/lib/postgresql/data
  sessionManagementDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionManagementDb:/var/lib/postgresql/data
  sessionRegulationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRegulationDb:/var/lib/postgresql/data
  sessionRequestManagementDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRequestManagementDb:/var/lib/postgresql/data
  sessioncalculator:
    depends_on:
    - infrastructures
    - appmonitoringschedule
    - sessionregulation
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Calculator__ScriptDurationInSeconds: 30
      Calculator__SessionTargetCountBuffer: 2
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
    image: loginvsi/sessioncalculator:dev
    networks:
    - front
    - messaging
    restart: always
  sessiondiscovery:
    depends_on:
    - sessionDiscoveryDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionDiscoveryDb;Database=SessionDiscovery;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionDiscovery
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/sessiondiscovery:dev
    networks:
    - databases
    - front
    restart: always
  sessiondiscoveryworker:
    depends_on:
    - sessiondiscovery
    - sessionmanagement
    - sessionrequestmanagement
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__SessionDiscoveryUrl: http://sessiondiscovery/sessiondiscovery
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement/sessionrequestmanagement
    image: loginvsi/sessiondiscoveryworker:dev
    networks:
    - front
    - messaging
    restart: always
  sessionloginresults:
    depends_on:
    - sessionLoginResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLoginResultsDb;Database=SessionLoginResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionLoginResults
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionloginresults:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionlogonscripts:
    depends_on:
    - sessionLogonScriptsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLogonScriptsDb;Database=SessionLogonScripts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionLogonScripts
      IdentityProvider__Authority: http://identityserver/identityServer
    image: loginvsi/sessionlogonscripts:dev
    networks:
    - databases
    - front
    restart: always
  sessionmanagement:
    depends_on:
    - sessionManagementDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionManagementDb;Database=SessionManagement;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionManagement
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionmanagement:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionmanagementworker:
    depends_on:
    - sessionmanagement
    - sessionrequestmanagement
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__SessionManagementUrl: http://sessionmanagement
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement
    image: loginvsi/sessionmanagementworker:dev
    networks:
    - front
    - messaging
    restart: always
  sessionregulation:
    depends_on:
    - sessionRegulationDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRegulationDb;Database=SessionRegulation;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionRegulation
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionregulation:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionregulator:
    depends_on:
    - sessionregulation
    - sessionmanagement
    - sessionrequestmanagement
    - accounts
    - infrastructures
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountsUrl: http://accounts/accounts
      Services__InfrastructuresUrl: http://infrastructures/infrastructures
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
      Services__SessionRequestManagementUrl: http://sessionrequestmanagement/sessionrequestmanagement
    image: loginvsi/sessionregulator:dev
    networks:
    - front
    - messaging
    restart: always
  sessionrequestmanagement:
    depends_on:
    - sessionRequestManagementDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRequestManagementDb;Database=SessionRequestManagement;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionRequestManagement
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionrequestmanagement:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/ui:dev
    networks:
    - front
    restart: always
  virtualUserResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/virtualUserResultsDb:/var/lib/postgresql/data
  virtualuserresults:
    depends_on:
    - virtualUserResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=virtualUserResultsDb;Database=VirtualUserResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: virtualUserResults
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
    image: loginvsi/virtualuserresults:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
version: "3.1"

